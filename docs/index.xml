<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jeannory&#39;s blog</title>
    <link>https://jeannory.github.io/blog/</link>
    <description>Recent content on Jeannory&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Oct 2019 17:28:02 +0200</lastBuildDate>
    
	<atom:link href="https://jeannory.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Keycloak</title>
      <link>https://jeannory.github.io/blog/articles/keycloak/</link>
      <pubDate>Thu, 23 Apr 2020 19:40:34 +0200</pubDate>
      
      <guid>https://jeannory.github.io/blog/articles/keycloak/</guid>
      <description>Introduction Keycloak est serveur d&amp;rsquo;authentification standalone. Il est reconnu par la protection qu&amp;rsquo;elle propose en terme de cyber sécurité et de très nombreuses librairies permettent une utilisation étendue (Java, AngularJs, Typescript, Ldap, etc..). Beaucoup d&amp;rsquo;entreprise lui font confiance et délèguent la partie authentification/autorisation à Keycloak. C&amp;rsquo;est un projet open source codé en java, qui fait preuve d&amp;rsquo;une grande maturité (version 9 à ce jour).
Mohamed Youssfi formateur java explique comment sécuriser des applications en micro service avec Keycloak à travers 11 vidéos.</description>
    </item>
    
    <item>
      <title>Springboot-tests</title>
      <link>https://jeannory.github.io/blog/articles/springboot-tests/</link>
      <pubDate>Fri, 25 Oct 2019 15:02:42 +0200</pubDate>
      
      <guid>https://jeannory.github.io/blog/articles/springboot-tests/</guid>
      <description>Introduction Springboot-tests : Type de tests avec Springboot
 Tests de persistence - DataJpaTest Tests unitaires - Mockito Tests de controleurs - In-Container  Fonctionalitées du projet :
 Enregistrement/Modification utilisateur Authentification Gestion des rôles implémentation de Spring Security/Jwt.  Présentation de l&amp;rsquo;implémentation de Spring Security/Jwt : ici
Stack technique
 Java 8 Springboot 2 Spring Security Jwt Postgresql Junit 4 Mockito 1.9 H2  Dépôt git du projet back-end : ici</description>
    </item>
    
    <item>
      <title>Spring Security</title>
      <link>https://jeannory.github.io/blog/articles/spring-security/</link>
      <pubDate>Mon, 07 Oct 2019 23:47:25 +0200</pubDate>
      
      <guid>https://jeannory.github.io/blog/articles/spring-security/</guid>
      <description>Introduction Initiation à Spring Security/Jwt en développant une application full-stack respectant les prérequis en terme de cybersécurité.
Article du 23/08/2019 importé en markdown pour Hugo au 08/10/2019.
MAJ au 12/10/2019 - ajout de la fonction refresh token
Dépôts github :
 Back-end : ici Front-end : ici  Protéger son application avec SpringBoot, Angular et Jwt Développer une application full stack en respectant les règles en terme de cyber sécurité.</description>
    </item>
    
    <item>
      <title>Author</title>
      <link>https://jeannory.github.io/blog/author/</link>
      <pubDate>Mon, 07 Oct 2019 23:39:08 +0200</pubDate>
      
      <guid>https://jeannory.github.io/blog/author/</guid>
      <description> --
Auteur  Software engineer passionné par le développement et la cyber-sécurité  Métier  Conception informatique Développement Mise en ligne  Spécialités  SQL Java Angular Infrastructure (Ovh/Ubuntu Server)  </description>
    </item>
    
  </channel>
</rss>