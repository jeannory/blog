<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gitlab on Jeannory&#39;s blog</title>
    <link>https://jeannory.github.io/blog/categories/gitlab/</link>
    <description>Recent content in Gitlab on Jeannory&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Apr 2020 16:20:53 +0200</lastBuildDate>
    
	<atom:link href="https://jeannory.github.io/blog/categories/gitlab/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gitlab</title>
      <link>https://jeannory.github.io/blog/articles/gitlab/</link>
      <pubDate>Sun, 26 Apr 2020 16:20:53 +0200</pubDate>
      
      <guid>https://jeannory.github.io/blog/articles/gitlab/</guid>
      <description>Introduction Gitlab fournit un ensemble de services complet pour l&amp;rsquo;intégration et le déploiement continue. Il est nécessaire de créer et de renseigner le fichier .gitlab-ci.yml à la racine du projet, pour qu&amp;rsquo;à chaque commit sur une branche cible, Gitlab exécute les tâches (stages).
Exemple d&amp;rsquo;utilisation avec le projet Back-end de Keycloak pour la réalisation des différentes étapes CI/CD.
Dépôts Gitlab  Back-end  Gitlab-CI L&amp;rsquo;intégration continue permet à chaque commit de tester le build du projet, l&amp;rsquo;exécution des tests, les affichages de différents rapports (qualité de code et couverture des tests) et l&amp;rsquo;archivage des différents artifacts.</description>
    </item>
    
  </channel>
</rss>